// Generated by Dagger (https://dagger.dev).
package com.shakbari.home.presentation.viewmodel;

import com.shakbari.home.domain.usecase.UserUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UsersViewModel_Factory implements Factory<UsersViewModel> {
  private final Provider<UserUseCase> userUseCaseProvider;

  public UsersViewModel_Factory(Provider<UserUseCase> userUseCaseProvider) {
    this.userUseCaseProvider = userUseCaseProvider;
  }

  @Override
  public UsersViewModel get() {
    return newInstance(userUseCaseProvider.get());
  }

  public static UsersViewModel_Factory create(Provider<UserUseCase> userUseCaseProvider) {
    return new UsersViewModel_Factory(userUseCaseProvider);
  }

  public static UsersViewModel newInstance(UserUseCase userUseCase) {
    return new UsersViewModel(userUseCase);
  }
}
